install.packages("digest")
install.packages("scales")
install.packages(c("car", "gglasso"))
require(graphics)
# a 2-dimensional example
x <- rbind(matrix(rnorm(100, sd = 0.3), ncol = 2),
matrix(rnorm(100, mean = 1, sd = 0.3), ncol = 2))
colnames(x) <- c("x", "y")
(cl <- kmeans(x, 2))
plot(x, col = cl$cluster)
points(cl$centers, col = 1:2, pch = 8, cex = 2)
# sum of squares
ss <- function(x) sum(scale(x, scale = FALSE)^2)
## cluster centers "fitted" to each obs.:
fitted.x <- fitted(cl);  head(fitted.x)
resid.x <- x - fitted(cl)
## Equalities : ----------------------------------
cbind(cl[c("betweenss", "tot.withinss", "totss")], # the same two columns
c(ss(fitted.x), ss(resid.x),    ss(x)))
stopifnot(all.equal(cl$ totss,        ss(x)),
all.equal(cl$ tot.withinss, ss(resid.x)),
## these three are the same:
all.equal(cl$ betweenss,    ss(fitted.x)),
all.equal(cl$ betweenss, cl$totss - cl$tot.withinss),
## and hence also
all.equal(ss(x), ss(fitted.x) + ss(resid.x))
)
kmeans(x,1)$withinss # trivial one-cluster, (its W.SS == ss(x))
## random starts do help here with too many clusters
## (and are often recommended anyway!):
(cl <- kmeans(x, 5, nstart = 25))
plot(x, col = cl$cluster)
points(cl$centers, col = 1:5, pch = 8)
View(fitted.x)
View(cl)
summary(cl)
cl$totss
for (i in 1:10)
cl <- kmeans(x, i, nstart = 25)$tot.withinss
cl<-c()
for (i in 1:10)
cl <- c(cl,kmeans(x, i, nstart = 25)$tot.withinss)
plot(1:10,cl)
cl<-c()
for (i in 1:10)
cl <- c(cl,kmeans(x, i, nstart = 25)$tot.withinss)
plot(1:10,cl,type="l")
cl<-c()
for (i in 1:10)
cl <- c(cl,kmeans(x, i, nstart = 25)$tot.withinss)
plot(1:10,cl,type="b")
require(graphics)
### Example 1: Violent crime rates by US state
hc <- hclust(dist(USArrests), "ave")
plot(hc)
plot(hc, hang = -1)
id
id<-identify(hc)
install.packages("quantstrat")
require(graphics)
# a 2-dimensional example
x <- rbind(matrix(rnorm(100, sd = 0.3), ncol = 2),
matrix(rnorm(100, mean = 1, sd = 0.3), ncol = 2))
colnames(x) <- c("x", "y")
(cl <- kmeans(x, 2))
plot(x, col = cl$cluster)
points(cl$centers, col = 1:2, pch = 8, cex = 2)
x <- c(0, 0, 1, 1, 1, 1)
y <- c(1, 0, 1, 1, 0, 1)
dist(rbind(x, y), method = "binary")
dist(rbind(x, y), method = "canberra")
rbind(x, y)
```
p
---
title: "Course Project"
output:
html_document:
keep_md: true
---
Declare some global variables.
```{r}
set.seed(383838)
library(ggplot2);
p <- 0.75 # partition ratio
k <- 10 # fold number
p
```
source('~/.active-rstudio-document')
source('D:/R Packages/ggplotExtra/R/1.R')
debugSource('D:/R Packages/ggplotExtra/R/1.R')
source('D:/R Packages/ggplotExtra/R/1.R')
source('D:/R Packages/ggplotExtra/R/1.R')
debugSource('D:/R Packages/ggplotExtra/R/1.R')
source('D:/R Packages/ggplotExtra/R/1.R')
debugSource('D:/R Packages/ggplotExtra/R/1.R')
debugSource('D:/R Packages/ggplotExtra/R/1.R')
source('D:/R Packages/ggplotExtra/R/1.R')
debugSource('D:/R Packages/ggplotExtra/R/1.R')
source('D:/R Packages/ggplotExtra/R/1.R')
debugSource('D:/R Packages/ggplotExtra/R/1.R')
debugSource('D:/R Packages/ggplotExtra/R/1.R')
source('D:/R Packages/ggplotExtra/R/1.R')
source('D:/R Packages/ggplotExtra/R/1.R')
debugSource('D:/R Packages/ggplotExtra/R/1.R')
source('D:/RPackages/ggplotExtra/R/qqplotGG.R')
debugSource('D:/RPackages/ggplotExtra/R/qqplotGG.R')
# Summarise number of movie ratings by year of movie
mry <- do.call(rbind, by(movies, round(movies$rating), function(df) {
nums <- tapply(df$length, df$year, length)
data.frame(rating=round(df$rating[1]), year = as.numeric(names(nums)), number=as.vector(nums))
}))
p <- ggplot(mry, aes(x=year, y=number, group=rating))
q<-p + geom_line()
a<-list(q,q,q)
ggarrange(a,c(1,2,3,3))
source('D:/RPackages/ggplotExtra/R/ggarrange.R')
ggarrange(a,c(1,2,3,3))
ggarrange(a,matrix(c(1,2,3,3),nrow=2))
# Summarise number of movie ratings by year of movie
mry <- do.call(rbind, by(movies, round(movies$rating), function(df) {
nums <- tapply(df$length, df$year, length)
data.frame(rating=round(df$rating[1]), year = as.numeric(names(nums)), number=as.vector(nums))
}))
p <- ggplot(mry, aes(x=year, y=number, group=rating))
q<-p + geom_line()
a<-list(q,q,q)
ggarrange(a,matrix(c(1,2,3,3),nrow=2,byrow=T))
三次方根-科哲 2014/9/10 19:04:17
(a<-qplot(date, year,geom="line"))
(b<-qplot(date, day,geom="path"))
(c<-qplot(date, hour,geom="boxplot"))
(a<-qplot(date, year,geom="line"))
(b<-qplot(date, day,geom="path"))
(c<-qplot(date, hour,geom="boxplot"))
